"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var navigationModule = require("~/shared/navigation");
var animationHelperModule = require("~/shared/animation-helper");
var sessionViewModel;
var page;
function navigatingTo(args) {
    page = args.object;
    sessionViewModel = args.context;
    page.bindingContext = sessionViewModel;
}
exports.navigatingTo = navigatingTo;
function toggleFavorite(args) {
    var gridLayout = args.object;
    var img = gridLayout.getViewById('imgFav');
    animationHelperModule.popAnimate(img).then(function () { return sessionViewModel.toggleFavorite(); });
}
exports.toggleFavorite = toggleFavorite;
function toggleDescription(args) {
    var btn = args.object;
    var txtDesc = page.getViewById('txtDescription');
    var scroll = page.getViewById('scroll');
    if (btn.text === 'MORE') {
        btn.text = 'LESS';
        txtDesc.text = sessionViewModel.description;
    }
    else {
        btn.text = 'MORE';
        txtDesc.text = sessionViewModel.descriptionShort;
        scroll.scrollToVerticalOffset(0, false);
    }
}
exports.toggleDescription = toggleDescription;
function backTap(agrs) {
    navigationModule.goBack();
}
exports.backTap = backTap;
function showMapTap(args) {
    navigationModule.goToRoomMapPage(sessionViewModel);
}
exports.showMapTap = showMapTap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vzc2lvbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2Vzc2lvbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBTUEsc0RBQXdEO0FBQ3hELGlFQUFtRTtBQUduRSxJQUFJLGdCQUFrQyxDQUFDO0FBQ3ZDLElBQUksSUFBVSxDQUFDO0FBRWYsc0JBQTZCLElBQW1CO0lBQzVDLElBQUksR0FBVSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQzFCLGdCQUFnQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxnQkFBZ0IsQ0FBQztBQUMzQyxDQUFDO0FBSkQsb0NBSUM7QUFFRCx3QkFBK0IsSUFBSTtJQUMvQixJQUFNLFVBQVUsR0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JDLElBQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFN0MscUJBQXFCLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFNLE9BQUEsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLEVBQWpDLENBQWlDLENBQUMsQ0FBQztBQUN4RixDQUFDO0FBTEQsd0NBS0M7QUFFRCwyQkFBa0MsSUFBZTtJQUM3QyxJQUFNLEdBQUcsR0FBWSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ2pDLElBQU0sT0FBTyxHQUFXLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUMzRCxJQUFNLE1BQU0sR0FBZ0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUV2RCxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdEIsR0FBRyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7UUFDbEIsT0FBTyxDQUFDLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUM7SUFDaEQsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0osR0FBRyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7UUFDbEIsT0FBTyxDQUFDLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNqRCxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVDLENBQUM7QUFDTCxDQUFDO0FBYkQsOENBYUM7QUFFRCxpQkFBd0IsSUFBc0I7SUFDMUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQUZELDBCQUVDO0FBRUQsb0JBQTJCLElBQXNCO0lBQzdDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFGRCxnQ0FFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2UsIEV2ZW50RGF0YSwgTmF2aWdhdGVkRGF0YSB9IGZyb20gJ3VpL3BhZ2UnO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICd1aS9idXR0b24nO1xyXG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJ3VpL2xhYmVsJztcclxuaW1wb3J0IHsgU2Nyb2xsVmlldyB9IGZyb20gJ3VpL3Njcm9sbC12aWV3JztcclxuaW1wb3J0IHsgR2VzdHVyZUV2ZW50RGF0YSB9IGZyb20gJ3VpL2dlc3R1cmVzJztcclxuXHJcbmltcG9ydCAqIGFzIG5hdmlnYXRpb25Nb2R1bGUgZnJvbSAnfi9zaGFyZWQvbmF2aWdhdGlvbic7XHJcbmltcG9ydCAqIGFzIGFuaW1hdGlvbkhlbHBlck1vZHVsZSBmcm9tICd+L3NoYXJlZC9hbmltYXRpb24taGVscGVyJztcclxuaW1wb3J0IHsgU2Vzc2lvblZpZXdNb2RlbCB9IGZyb20gJy4vc2Vzc2lvbi12aWV3LW1vZGVsJztcclxuXHJcbmxldCBzZXNzaW9uVmlld01vZGVsOiBTZXNzaW9uVmlld01vZGVsO1xyXG5sZXQgcGFnZTogUGFnZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBuYXZpZ2F0aW5nVG8oYXJnczogTmF2aWdhdGVkRGF0YSkge1xyXG4gICAgcGFnZSA9IDxQYWdlPiBhcmdzLm9iamVjdDtcclxuICAgIHNlc3Npb25WaWV3TW9kZWwgPSBhcmdzLmNvbnRleHQ7XHJcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gc2Vzc2lvblZpZXdNb2RlbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUZhdm9yaXRlKGFyZ3MpIHtcclxuICAgIGNvbnN0IGdyaWRMYXlvdXQgPSA8YW55PiBhcmdzLm9iamVjdDtcclxuICAgIGNvbnN0IGltZyA9IGdyaWRMYXlvdXQuZ2V0Vmlld0J5SWQoJ2ltZ0ZhdicpO1xyXG5cclxuICAgIGFuaW1hdGlvbkhlbHBlck1vZHVsZS5wb3BBbmltYXRlKGltZykudGhlbigoKSA9PiBzZXNzaW9uVmlld01vZGVsLnRvZ2dsZUZhdm9yaXRlKCkpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlRGVzY3JpcHRpb24oYXJnczogRXZlbnREYXRhKSB7XHJcbiAgICBjb25zdCBidG4gPSA8QnV0dG9uPiBhcmdzLm9iamVjdDtcclxuICAgIGNvbnN0IHR4dERlc2MgPSA8TGFiZWw+IHBhZ2UuZ2V0Vmlld0J5SWQoJ3R4dERlc2NyaXB0aW9uJyk7XHJcbiAgICBjb25zdCBzY3JvbGwgPSA8U2Nyb2xsVmlldz4gcGFnZS5nZXRWaWV3QnlJZCgnc2Nyb2xsJyk7XHJcblxyXG4gICAgaWYgKGJ0bi50ZXh0ID09PSAnTU9SRScpIHtcclxuICAgICAgICBidG4udGV4dCA9ICdMRVNTJztcclxuICAgICAgICB0eHREZXNjLnRleHQgPSBzZXNzaW9uVmlld01vZGVsLmRlc2NyaXB0aW9uO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBidG4udGV4dCA9ICdNT1JFJztcclxuICAgICAgICB0eHREZXNjLnRleHQgPSBzZXNzaW9uVmlld01vZGVsLmRlc2NyaXB0aW9uU2hvcnQ7XHJcbiAgICAgICAgc2Nyb2xsLnNjcm9sbFRvVmVydGljYWxPZmZzZXQoMCwgZmFsc2UpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYmFja1RhcChhZ3JzOiBHZXN0dXJlRXZlbnREYXRhKSB7XHJcbiAgICBuYXZpZ2F0aW9uTW9kdWxlLmdvQmFjaygpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2hvd01hcFRhcChhcmdzOiBHZXN0dXJlRXZlbnREYXRhKSB7XHJcbiAgICBuYXZpZ2F0aW9uTW9kdWxlLmdvVG9Sb29tTWFwUGFnZShzZXNzaW9uVmlld01vZGVsKTtcclxufSJdfQ==